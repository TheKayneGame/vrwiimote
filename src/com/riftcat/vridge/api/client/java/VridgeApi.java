// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vridge-api.proto

package com.riftcat.vridge.api.client.java;

public final class VridgeApi {
  private VridgeApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ControllerStateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ControllerStateRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    int getVersion();

    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    boolean hasTaskType();
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    int getTaskType();

    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    int getOrigin();

    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    boolean hasControllerState();
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRController getControllerState();
  }
  /**
   * Protobuf type {@code ControllerStateRequest}
   */
  public  static final class ControllerStateRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ControllerStateRequest, ControllerStateRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:ControllerStateRequest)
      ControllerStateRequestOrBuilder {
    private ControllerStateRequest() {
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int TASKTYPE_FIELD_NUMBER = 2;
    private int taskType_;
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasTaskType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getTaskType() {
      return taskType_;
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    private void setTaskType(int value) {
      bitField0_ |= 0x00000002;
      taskType_ = value;
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    private void clearTaskType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      taskType_ = 0;
    }

    public static final int ORIGIN_FIELD_NUMBER = 3;
    private int origin_;
    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    @java.lang.Override
    public int getOrigin() {
      return origin_;
    }
    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    private void setOrigin(int value) {
      bitField0_ |= 0x00000004;
      origin_ = value;
    }
    /**
     * <code>optional uint32 Origin = 3 [default = 0];</code>
     */
    private void clearOrigin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      origin_ = 0;
    }

    public static final int CONTROLLERSTATE_FIELD_NUMBER = 4;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRController controllerState_;
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    @java.lang.Override
    public boolean hasControllerState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRController getControllerState() {
      return controllerState_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRController.getDefaultInstance() : controllerState_;
    }
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    private void setControllerState(com.riftcat.vridge.api.client.java.VridgeApi.VRController value) {
      if (value == null) {
        throw new NullPointerException();
      }
      controllerState_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    private void setControllerState(
        com.riftcat.vridge.api.client.java.VridgeApi.VRController.Builder builderForValue) {
      controllerState_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeControllerState(com.riftcat.vridge.api.client.java.VridgeApi.VRController value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (controllerState_ != null &&
          controllerState_ != com.riftcat.vridge.api.client.java.VridgeApi.VRController.getDefaultInstance()) {
        controllerState_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRController.newBuilder(controllerState_).mergeFrom(value).buildPartial();
      } else {
        controllerState_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .VRController ControllerState = 4;</code>
     */
    private void clearControllerState() {  controllerState_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, taskType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, origin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getControllerState());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, taskType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, origin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getControllerState());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code ControllerStateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:ControllerStateRequest)
        com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequestOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasTaskType() {
        return instance.hasTaskType();
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getTaskType() {
        return instance.getTaskType();
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      public Builder setTaskType(int value) {
        copyOnWrite();
        instance.setTaskType(value);
        return this;
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      public Builder clearTaskType() {
        copyOnWrite();
        instance.clearTaskType();
        return this;
      }

      /**
       * <code>optional uint32 Origin = 3 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasOrigin() {
        return instance.hasOrigin();
      }
      /**
       * <code>optional uint32 Origin = 3 [default = 0];</code>
       */
      @java.lang.Override
      public int getOrigin() {
        return instance.getOrigin();
      }
      /**
       * <code>optional uint32 Origin = 3 [default = 0];</code>
       */
      public Builder setOrigin(int value) {
        copyOnWrite();
        instance.setOrigin(value);
        return this;
      }
      /**
       * <code>optional uint32 Origin = 3 [default = 0];</code>
       */
      public Builder clearOrigin() {
        copyOnWrite();
        instance.clearOrigin();
        return this;
      }

      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      @java.lang.Override
      public boolean hasControllerState() {
        return instance.hasControllerState();
      }
      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRController getControllerState() {
        return instance.getControllerState();
      }
      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      public Builder setControllerState(com.riftcat.vridge.api.client.java.VridgeApi.VRController value) {
        copyOnWrite();
        instance.setControllerState(value);
        return this;
        }
      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      public Builder setControllerState(
          com.riftcat.vridge.api.client.java.VridgeApi.VRController.Builder builderForValue) {
        copyOnWrite();
        instance.setControllerState(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      public Builder mergeControllerState(com.riftcat.vridge.api.client.java.VridgeApi.VRController value) {
        copyOnWrite();
        instance.mergeControllerState(value);
        return this;
      }
      /**
       * <code>optional .VRController ControllerState = 4;</code>
       */
      public Builder clearControllerState() {  copyOnWrite();
        instance.clearControllerState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ControllerStateRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest other = (com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest) arg1;
          version_ = visitor.visitInt(
              hasVersion(), version_,
              other.hasVersion(), other.version_);
          taskType_ = visitor.visitInt(
              hasTaskType(), taskType_,
              other.hasTaskType(), other.taskType_);
          origin_ = visitor.visitInt(
              hasOrigin(), origin_,
              other.hasOrigin(), other.origin_);
          controllerState_ = visitor.visitMessage(controllerState_, other.controllerState_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  version_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  taskType_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  origin_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRController.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = controllerState_.toBuilder();
                  }
                  controllerState_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRController.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(controllerState_);
                    controllerState_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ControllerStateRequest)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ControllerStateRequest();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ControllerStateRequest> PARSER;

    public static com.google.protobuf.Parser<ControllerStateRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ControllerStateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ControllerStateResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    int getVersion();

    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    boolean hasReplyCode();
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    int getReplyCode();
  }
  /**
   * Protobuf type {@code ControllerStateResponse}
   */
  public  static final class ControllerStateResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ControllerStateResponse, ControllerStateResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:ControllerStateResponse)
      ControllerStateResponseOrBuilder {
    private ControllerStateResponse() {
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int REPLYCODE_FIELD_NUMBER = 2;
    private int replyCode_;
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasReplyCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getReplyCode() {
      return replyCode_;
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    private void setReplyCode(int value) {
      bitField0_ |= 0x00000002;
      replyCode_ = value;
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    private void clearReplyCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      replyCode_ = 0;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, replyCode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, replyCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    //public static Builder newBuilder() {
    //  return (Builder) DEFAULT_INSTANCE.createBuilder();
    //}
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code ControllerStateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:ControllerStateResponse)
        com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponseOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasReplyCode() {
        return instance.hasReplyCode();
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getReplyCode() {
        return instance.getReplyCode();
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      public Builder setReplyCode(int value) {
        copyOnWrite();
        instance.setReplyCode(value);
        return this;
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      public Builder clearReplyCode() {
        copyOnWrite();
        instance.clearReplyCode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ControllerStateResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse other = (com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse) arg1;
          version_ = visitor.visitInt(
              hasVersion(), version_,
              other.hasVersion(), other.version_);
          replyCode_ = visitor.visitInt(
              hasReplyCode(), replyCode_,
              other.hasReplyCode(), other.replyCode_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  version_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  replyCode_ = input.readUInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ControllerStateResponse)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ControllerStateResponse();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.ControllerStateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ControllerStateResponse> PARSER;

    public static com.google.protobuf.Parser<ControllerStateResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HapticPulseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HapticPulse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    boolean hasControllerId();
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    int getControllerId();

    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    boolean hasLengthUs();
    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    int getLengthUs();

    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    boolean hasTimestampUs();
    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    int getTimestampUs();
  }
  /**
   * Protobuf type {@code HapticPulse}
   */
  public  static final class HapticPulse extends
      com.google.protobuf.GeneratedMessageLite<
          HapticPulse, HapticPulse.Builder> implements
      // @@protoc_insertion_point(message_implements:HapticPulse)
      HapticPulseOrBuilder {
    private HapticPulse() {
    }
    private int bitField0_;
    public static final int CONTROLLERID_FIELD_NUMBER = 1;
    private int controllerId_;
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasControllerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getControllerId() {
      return controllerId_;
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    private void setControllerId(int value) {
      bitField0_ |= 0x00000001;
      controllerId_ = value;
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    private void clearControllerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      controllerId_ = 0;
    }

    public static final int LENGTHUS_FIELD_NUMBER = 2;
    private int lengthUs_;
    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasLengthUs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getLengthUs() {
      return lengthUs_;
    }
    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    private void setLengthUs(int value) {
      bitField0_ |= 0x00000002;
      lengthUs_ = value;
    }
    /**
     * <code>optional uint32 LengthUs = 2 [default = 0];</code>
     */
    private void clearLengthUs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      lengthUs_ = 0;
    }

    public static final int TIMESTAMPUS_FIELD_NUMBER = 3;
    private int timestampUs_;
    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasTimestampUs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    @java.lang.Override
    public int getTimestampUs() {
      return timestampUs_;
    }
    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    private void setTimestampUs(int value) {
      bitField0_ |= 0x00000004;
      timestampUs_ = value;
    }
    /**
     * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
     */
    private void clearTimestampUs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timestampUs_ = 0;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, controllerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, lengthUs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, timestampUs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, controllerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lengthUs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timestampUs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code HapticPulse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse, Builder> implements
        // @@protoc_insertion_point(builder_implements:HapticPulse)
        com.riftcat.vridge.api.client.java.VridgeApi.HapticPulseOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasControllerId() {
        return instance.hasControllerId();
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getControllerId() {
        return instance.getControllerId();
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      public Builder setControllerId(int value) {
        copyOnWrite();
        instance.setControllerId(value);
        return this;
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      public Builder clearControllerId() {
        copyOnWrite();
        instance.clearControllerId();
        return this;
      }

      /**
       * <code>optional uint32 LengthUs = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasLengthUs() {
        return instance.hasLengthUs();
      }
      /**
       * <code>optional uint32 LengthUs = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getLengthUs() {
        return instance.getLengthUs();
      }
      /**
       * <code>optional uint32 LengthUs = 2 [default = 0];</code>
       */
      public Builder setLengthUs(int value) {
        copyOnWrite();
        instance.setLengthUs(value);
        return this;
      }
      /**
       * <code>optional uint32 LengthUs = 2 [default = 0];</code>
       */
      public Builder clearLengthUs() {
        copyOnWrite();
        instance.clearLengthUs();
        return this;
      }

      /**
       * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasTimestampUs() {
        return instance.hasTimestampUs();
      }
      /**
       * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
       */
      @java.lang.Override
      public int getTimestampUs() {
        return instance.getTimestampUs();
      }
      /**
       * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
       */
      public Builder setTimestampUs(int value) {
        copyOnWrite();
        instance.setTimestampUs(value);
        return this;
      }
      /**
       * <code>optional uint32 TimestampUs = 3 [default = 0];</code>
       */
      public Builder clearTimestampUs() {
        copyOnWrite();
        instance.clearTimestampUs();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HapticPulse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse other = (com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse) arg1;
          controllerId_ = visitor.visitInt(
              hasControllerId(), controllerId_,
              other.hasControllerId(), other.controllerId_);
          lengthUs_ = visitor.visitInt(
              hasLengthUs(), lengthUs_,
              other.hasLengthUs(), other.lengthUs_);
          timestampUs_ = visitor.visitInt(
              hasTimestampUs(), timestampUs_,
              other.hasTimestampUs(), other.timestampUs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  controllerId_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  lengthUs_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  timestampUs_ = input.readUInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HapticPulse)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new HapticPulse();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HapticPulse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HapticPulse> PARSER;

    public static com.google.protobuf.Parser<HapticPulse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HeadTrackingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeadTrackingRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    int getVersion();

    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    boolean hasTaskType();
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    int getTaskType();

    /**
     * <code>optional bytes Data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes Data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code HeadTrackingRequest}
   */
  public  static final class HeadTrackingRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HeadTrackingRequest, HeadTrackingRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:HeadTrackingRequest)
      HeadTrackingRequestOrBuilder {
    private HeadTrackingRequest() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int TASKTYPE_FIELD_NUMBER = 2;
    private int taskType_;
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasTaskType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getTaskType() {
      return taskType_;
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    private void setTaskType(int value) {
      bitField0_ |= 0x00000002;
      taskType_ = value;
    }
    /**
     * <code>optional uint32 TaskType = 2 [default = 0];</code>
     */
    private void clearTaskType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      taskType_ = 0;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes Data = 3;</code>
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes Data = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes Data = 3;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      data_ = value;
    }
    /**
     * <code>optional bytes Data = 3;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000004);
      data_ = getDefaultInstance().getData();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, taskType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, taskType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code HeadTrackingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:HeadTrackingRequest)
        com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequestOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasTaskType() {
        return instance.hasTaskType();
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getTaskType() {
        return instance.getTaskType();
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      public Builder setTaskType(int value) {
        copyOnWrite();
        instance.setTaskType(value);
        return this;
      }
      /**
       * <code>optional uint32 TaskType = 2 [default = 0];</code>
       */
      public Builder clearTaskType() {
        copyOnWrite();
        instance.clearTaskType();
        return this;
      }

      /**
       * <code>optional bytes Data = 3;</code>
       */
      @java.lang.Override
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>optional bytes Data = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>optional bytes Data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>optional bytes Data = 3;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeadTrackingRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest other = (com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest) arg1;
          version_ = visitor.visitInt(
              hasVersion(), version_,
              other.hasVersion(), other.version_);
          taskType_ = visitor.visitInt(
              hasTaskType(), taskType_,
              other.hasTaskType(), other.taskType_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  version_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  taskType_ = input.readUInt32();
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  data_ = input.readBytes();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HeadTrackingRequest)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new HeadTrackingRequest();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HeadTrackingRequest> PARSER;

    public static com.google.protobuf.Parser<HeadTrackingRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HeadTrackingResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeadTrackingResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    int getVersion();

    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    boolean hasReplyCode();
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    int getReplyCode();

    /**
     * <code>repeated float Data = 3;</code>
     */
    java.util.List<java.lang.Float> getDataList();
    /**
     * <code>repeated float Data = 3;</code>
     */
    int getDataCount();
    /**
     * <code>repeated float Data = 3;</code>
     */
    float getData(int index);
  }
  /**
   * Protobuf type {@code HeadTrackingResponse}
   */
  public  static final class HeadTrackingResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HeadTrackingResponse, HeadTrackingResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:HeadTrackingResponse)
      HeadTrackingResponseOrBuilder {
    private HeadTrackingResponse() {
      data_ = emptyFloatList();
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional int32 Version = 1 [default = 0];</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int REPLYCODE_FIELD_NUMBER = 2;
    private int replyCode_;
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasReplyCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getReplyCode() {
      return replyCode_;
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    private void setReplyCode(int value) {
      bitField0_ |= 0x00000002;
      replyCode_ = value;
    }
    /**
     * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
     */
    private void clearReplyCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      replyCode_ = 0;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList data_;
    /**
     * <code>repeated float Data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    @java.lang.Override
    public float getData(int index) {
      return data_.getFloat(index);
    }
    private void ensureDataIsMutable() {
      if (!data_.isModifiable()) {
        data_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(data_);
       }
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    private void setData(
        int index, float value) {
      ensureDataIsMutable();
      data_.setFloat(index, value);
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    private void addData(float value) {
      ensureDataIsMutable();
      data_.addFloat(value);
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    private void addAllData(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureDataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, data_);
    }
    /**
     * <code>repeated float Data = 3;</code>
     */
    private void clearData() {
      data_ = emptyFloatList();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, replyCode_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeFloat(3, data_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, replyCode_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code HeadTrackingResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:HeadTrackingResponse)
        com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponseOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional int32 Version = 1 [default = 0];</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasReplyCode() {
        return instance.hasReplyCode();
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getReplyCode() {
        return instance.getReplyCode();
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      public Builder setReplyCode(int value) {
        copyOnWrite();
        instance.setReplyCode(value);
        return this;
      }
      /**
       * <code>optional uint32 ReplyCode = 2 [default = 0];</code>
       */
      public Builder clearReplyCode() {
        copyOnWrite();
        instance.clearReplyCode();
        return this;
      }

      /**
       * <code>repeated float Data = 3;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getDataList() {
        return java.util.Collections.unmodifiableList(
            instance.getDataList());
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      @java.lang.Override
      public int getDataCount() {
        return instance.getDataCount();
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      @java.lang.Override
      public float getData(int index) {
        return instance.getData(index);
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      public Builder setData(
          int index, float value) {
        copyOnWrite();
        instance.setData(index, value);
        return this;
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      public Builder addData(float value) {
        copyOnWrite();
        instance.addData(value);
        return this;
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        copyOnWrite();
        instance.addAllData(values);
        return this;
      }
      /**
       * <code>repeated float Data = 3;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeadTrackingResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          data_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse other = (com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse) arg1;
          version_ = visitor.visitInt(
              hasVersion(), version_,
              other.hasVersion(), other.version_);
          replyCode_ = visitor.visitInt(
              hasReplyCode(), replyCode_,
              other.hasReplyCode(), other.replyCode_);
          data_= visitor.visitFloatList(data_, other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  version_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  replyCode_ = input.readUInt32();
                  break;
                }
                case 29: {
                  if (!data_.isModifiable()) {
                    data_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(data_);
                  }
                  data_.addFloat(input.readFloat());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!data_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = data_.size();
                    data_ = data_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    data_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HeadTrackingResponse)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new HeadTrackingResponse();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.HeadTrackingResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HeadTrackingResponse> PARSER;

    public static com.google.protobuf.Parser<HeadTrackingResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VRControllerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VRController)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    boolean hasControllerId();
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    int getControllerId();

    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    int getStatus();

    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    java.util.List<java.lang.Float> getOrientationMatrixList();
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    int getOrientationMatrixCount();
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    float getOrientationMatrix(int index);

    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    boolean hasButtonState();
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t getButtonState();
  }
  /**
   * Protobuf type {@code VRController}
   */
  public  static final class VRController extends
      com.google.protobuf.GeneratedMessageLite<
          VRController, VRController.Builder> implements
      // @@protoc_insertion_point(message_implements:VRController)
      VRControllerOrBuilder {
    private VRController() {
      orientationMatrix_ = emptyFloatList();
    }
    private int bitField0_;
    public static final int CONTROLLERID_FIELD_NUMBER = 1;
    private int controllerId_;
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasControllerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getControllerId() {
      return controllerId_;
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    private void setControllerId(int value) {
      bitField0_ |= 0x00000001;
      controllerId_ = value;
    }
    /**
     * <code>optional int32 ControllerId = 1 [default = 0];</code>
     */
    private void clearControllerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      controllerId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    @java.lang.Override
    public int getStatus() {
      return status_;
    }
    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    private void setStatus(int value) {
      bitField0_ |= 0x00000002;
      status_ = value;
    }
    /**
     * <code>optional int32 Status = 2 [default = 0];</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static final int ORIENTATIONMATRIX_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList orientationMatrix_;
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getOrientationMatrixList() {
      return orientationMatrix_;
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    @java.lang.Override
    public int getOrientationMatrixCount() {
      return orientationMatrix_.size();
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    @java.lang.Override
    public float getOrientationMatrix(int index) {
      return orientationMatrix_.getFloat(index);
    }
    private void ensureOrientationMatrixIsMutable() {
      if (!orientationMatrix_.isModifiable()) {
        orientationMatrix_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(orientationMatrix_);
       }
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    private void setOrientationMatrix(
        int index, float value) {
      ensureOrientationMatrixIsMutable();
      orientationMatrix_.setFloat(index, value);
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    private void addOrientationMatrix(float value) {
      ensureOrientationMatrixIsMutable();
      orientationMatrix_.addFloat(value);
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    private void addAllOrientationMatrix(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureOrientationMatrixIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, orientationMatrix_);
    }
    /**
     * <code>repeated float OrientationMatrix = 3;</code>
     */
    private void clearOrientationMatrix() {
      orientationMatrix_ = emptyFloatList();
    }

    public static final int BUTTONSTATE_FIELD_NUMBER = 4;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t buttonState_;
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    @java.lang.Override
    public boolean hasButtonState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t getButtonState() {
      return buttonState_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.getDefaultInstance() : buttonState_;
    }
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    private void setButtonState(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      buttonState_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    private void setButtonState(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.Builder builderForValue) {
      buttonState_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeButtonState(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (buttonState_ != null &&
          buttonState_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.getDefaultInstance()) {
        buttonState_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.newBuilder(buttonState_).mergeFrom(value).buildPartial();
      } else {
        buttonState_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .VRControllerState_t ButtonState = 4;</code>
     */
    private void clearButtonState() {  buttonState_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, controllerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      for (int i = 0; i < orientationMatrix_.size(); i++) {
        output.writeFloat(3, orientationMatrix_.getFloat(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getButtonState());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, controllerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getOrientationMatrixList().size();
        size += dataSize;
        size += 1 * getOrientationMatrixList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getButtonState());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.VRController prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code VRController}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.VRController, Builder> implements
        // @@protoc_insertion_point(builder_implements:VRController)
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.VRController.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasControllerId() {
        return instance.hasControllerId();
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getControllerId() {
        return instance.getControllerId();
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      public Builder setControllerId(int value) {
        copyOnWrite();
        instance.setControllerId(value);
        return this;
      }
      /**
       * <code>optional int32 ControllerId = 1 [default = 0];</code>
       */
      public Builder clearControllerId() {
        copyOnWrite();
        instance.clearControllerId();
        return this;
      }

      /**
       * <code>optional int32 Status = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional int32 Status = 2 [default = 0];</code>
       */
      @java.lang.Override
      public int getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional int32 Status = 2 [default = 0];</code>
       */
      public Builder setStatus(int value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional int32 Status = 2 [default = 0];</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getOrientationMatrixList() {
        return java.util.Collections.unmodifiableList(
            instance.getOrientationMatrixList());
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      @java.lang.Override
      public int getOrientationMatrixCount() {
        return instance.getOrientationMatrixCount();
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      @java.lang.Override
      public float getOrientationMatrix(int index) {
        return instance.getOrientationMatrix(index);
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      public Builder setOrientationMatrix(
          int index, float value) {
        copyOnWrite();
        instance.setOrientationMatrix(index, value);
        return this;
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      public Builder addOrientationMatrix(float value) {
        copyOnWrite();
        instance.addOrientationMatrix(value);
        return this;
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      public Builder addAllOrientationMatrix(
          java.lang.Iterable<? extends java.lang.Float> values) {
        copyOnWrite();
        instance.addAllOrientationMatrix(values);
        return this;
      }
      /**
       * <code>repeated float OrientationMatrix = 3;</code>
       */
      public Builder clearOrientationMatrix() {
        copyOnWrite();
        instance.clearOrientationMatrix();
        return this;
      }

      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      @java.lang.Override
      public boolean hasButtonState() {
        return instance.hasButtonState();
      }
      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t getButtonState() {
        return instance.getButtonState();
      }
      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      public Builder setButtonState(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t value) {
        copyOnWrite();
        instance.setButtonState(value);
        return this;
        }
      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      public Builder setButtonState(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.Builder builderForValue) {
        copyOnWrite();
        instance.setButtonState(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      public Builder mergeButtonState(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t value) {
        copyOnWrite();
        instance.mergeButtonState(value);
        return this;
      }
      /**
       * <code>optional .VRControllerState_t ButtonState = 4;</code>
       */
      public Builder clearButtonState() {  copyOnWrite();
        instance.clearButtonState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VRController)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.VRController();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          orientationMatrix_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.VRController other = (com.riftcat.vridge.api.client.java.VridgeApi.VRController) arg1;
          controllerId_ = visitor.visitInt(
              hasControllerId(), controllerId_,
              other.hasControllerId(), other.controllerId_);
          status_ = visitor.visitInt(
              hasStatus(), status_,
              other.hasStatus(), other.status_);
          orientationMatrix_= visitor.visitFloatList(orientationMatrix_, other.orientationMatrix_);
          buttonState_ = visitor.visitMessage(buttonState_, other.buttonState_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  controllerId_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  status_ = input.readInt32();
                  break;
                }
                case 29: {
                  if (!orientationMatrix_.isModifiable()) {
                    orientationMatrix_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(orientationMatrix_);
                  }
                  orientationMatrix_.addFloat(input.readFloat());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!orientationMatrix_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = orientationMatrix_.size();
                    orientationMatrix_ = orientationMatrix_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    orientationMatrix_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 34: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = buttonState_.toBuilder();
                  }
                  buttonState_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(buttonState_);
                    buttonState_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.VRController> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.VRController.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:VRController)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.VRController DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new VRController();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRController getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VRController> PARSER;

    public static com.google.protobuf.Parser<VRController> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VRControllerAxis_tOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VRControllerAxis_t)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    boolean hasX();
    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    float getX();

    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    boolean hasY();
    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    float getY();
  }
  /**
   * Protobuf type {@code VRControllerAxis_t}
   */
  public  static final class VRControllerAxis_t extends
      com.google.protobuf.GeneratedMessageLite<
          VRControllerAxis_t, VRControllerAxis_t.Builder> implements
      // @@protoc_insertion_point(message_implements:VRControllerAxis_t)
      VRControllerAxis_tOrBuilder {
    private VRControllerAxis_t() {
    }
    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }
    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    private void setX(float value) {
      bitField0_ |= 0x00000001;
      x_ = value;
    }
    /**
     * <code>optional float x = 1 [default = 0];</code>
     */
    private void clearX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      x_ = 0F;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }
    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    private void setY(float value) {
      bitField0_ |= 0x00000002;
      y_ = value;
    }
    /**
     * <code>optional float y = 2 [default = 0];</code>
     */
    private void clearY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      y_ = 0F;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code VRControllerAxis_t}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t, Builder> implements
        // @@protoc_insertion_point(builder_implements:VRControllerAxis_t)
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_tOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional float x = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasX() {
        return instance.hasX();
      }
      /**
       * <code>optional float x = 1 [default = 0];</code>
       */
      @java.lang.Override
      public float getX() {
        return instance.getX();
      }
      /**
       * <code>optional float x = 1 [default = 0];</code>
       */
      public Builder setX(float value) {
        copyOnWrite();
        instance.setX(value);
        return this;
      }
      /**
       * <code>optional float x = 1 [default = 0];</code>
       */
      public Builder clearX() {
        copyOnWrite();
        instance.clearX();
        return this;
      }

      /**
       * <code>optional float y = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasY() {
        return instance.hasY();
      }
      /**
       * <code>optional float y = 2 [default = 0];</code>
       */
      @java.lang.Override
      public float getY() {
        return instance.getY();
      }
      /**
       * <code>optional float y = 2 [default = 0];</code>
       */
      public Builder setY(float value) {
        copyOnWrite();
        instance.setY(value);
        return this;
      }
      /**
       * <code>optional float y = 2 [default = 0];</code>
       */
      public Builder clearY() {
        copyOnWrite();
        instance.clearY();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VRControllerAxis_t)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t other = (com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t) arg1;
          x_ = visitor.visitFloat(
              hasX(), x_,
              other.hasX(), other.x_);
          y_ = visitor.visitFloat(
              hasY(), y_,
              other.hasY(), other.y_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:VRControllerAxis_t)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new VRControllerAxis_t();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VRControllerAxis_t> PARSER;

    public static com.google.protobuf.Parser<VRControllerAxis_t> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VRControllerState_tOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VRControllerState_t)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    boolean hasUnPacketNum();
    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    int getUnPacketNum();

    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    boolean hasUlButtonPressed();
    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    long getUlButtonPressed();

    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    boolean hasUlButtonTouched();
    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    long getUlButtonTouched();

    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    boolean hasRAxis0();
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis0();

    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    boolean hasRAxis1();
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis1();

    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    boolean hasRAxis2();
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis2();

    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    boolean hasRAxis3();
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis3();

    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    boolean hasRAxis4();
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis4();
  }
  /**
   * Protobuf type {@code VRControllerState_t}
   */
  public  static final class VRControllerState_t extends
      com.google.protobuf.GeneratedMessageLite<
          VRControllerState_t, VRControllerState_t.Builder> implements
      // @@protoc_insertion_point(message_implements:VRControllerState_t)
      VRControllerState_tOrBuilder {
    private VRControllerState_t() {
    }
    private int bitField0_;
    public static final int UNPACKETNUM_FIELD_NUMBER = 1;
    private int unPacketNum_;
    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasUnPacketNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    @java.lang.Override
    public int getUnPacketNum() {
      return unPacketNum_;
    }
    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    private void setUnPacketNum(int value) {
      bitField0_ |= 0x00000001;
      unPacketNum_ = value;
    }
    /**
     * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
     */
    private void clearUnPacketNum() {
      bitField0_ = (bitField0_ & ~0x00000001);
      unPacketNum_ = 0;
    }

    public static final int ULBUTTONPRESSED_FIELD_NUMBER = 2;
    private long ulButtonPressed_;
    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasUlButtonPressed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    @java.lang.Override
    public long getUlButtonPressed() {
      return ulButtonPressed_;
    }
    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    private void setUlButtonPressed(long value) {
      bitField0_ |= 0x00000002;
      ulButtonPressed_ = value;
    }
    /**
     * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
     */
    private void clearUlButtonPressed() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ulButtonPressed_ = 0L;
    }

    public static final int ULBUTTONTOUCHED_FIELD_NUMBER = 3;
    private long ulButtonTouched_;
    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasUlButtonTouched() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    @java.lang.Override
    public long getUlButtonTouched() {
      return ulButtonTouched_;
    }
    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    private void setUlButtonTouched(long value) {
      bitField0_ |= 0x00000004;
      ulButtonTouched_ = value;
    }
    /**
     * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
     */
    private void clearUlButtonTouched() {
      bitField0_ = (bitField0_ & ~0x00000004);
      ulButtonTouched_ = 0L;
    }

    public static final int RAXIS0_FIELD_NUMBER = 4;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t rAxis0_;
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    @java.lang.Override
    public boolean hasRAxis0() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis0() {
      return rAxis0_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance() : rAxis0_;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    private void setRAxis0(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rAxis0_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    private void setRAxis0(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
      rAxis0_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRAxis0(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (rAxis0_ != null &&
          rAxis0_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance()) {
        rAxis0_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder(rAxis0_).mergeFrom(value).buildPartial();
      } else {
        rAxis0_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
     */
    private void clearRAxis0() {  rAxis0_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int RAXIS1_FIELD_NUMBER = 5;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t rAxis1_;
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    @java.lang.Override
    public boolean hasRAxis1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis1() {
      return rAxis1_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance() : rAxis1_;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    private void setRAxis1(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rAxis1_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    private void setRAxis1(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
      rAxis1_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRAxis1(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (rAxis1_ != null &&
          rAxis1_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance()) {
        rAxis1_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder(rAxis1_).mergeFrom(value).buildPartial();
      } else {
        rAxis1_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
     */
    private void clearRAxis1() {  rAxis1_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int RAXIS2_FIELD_NUMBER = 7;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t rAxis2_;
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    @java.lang.Override
    public boolean hasRAxis2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis2() {
      return rAxis2_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance() : rAxis2_;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    private void setRAxis2(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rAxis2_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    private void setRAxis2(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
      rAxis2_ = builderForValue.build();
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRAxis2(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (rAxis2_ != null &&
          rAxis2_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance()) {
        rAxis2_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder(rAxis2_).mergeFrom(value).buildPartial();
      } else {
        rAxis2_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
     */
    private void clearRAxis2() {  rAxis2_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int RAXIS3_FIELD_NUMBER = 8;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t rAxis3_;
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    @java.lang.Override
    public boolean hasRAxis3() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis3() {
      return rAxis3_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance() : rAxis3_;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    private void setRAxis3(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rAxis3_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    private void setRAxis3(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
      rAxis3_ = builderForValue.build();
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRAxis3(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (rAxis3_ != null &&
          rAxis3_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance()) {
        rAxis3_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder(rAxis3_).mergeFrom(value).buildPartial();
      } else {
        rAxis3_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
     */
    private void clearRAxis3() {  rAxis3_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int RAXIS4_FIELD_NUMBER = 9;
    private com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t rAxis4_;
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    @java.lang.Override
    public boolean hasRAxis4() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    @java.lang.Override
    public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis4() {
      return rAxis4_ == null ? com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance() : rAxis4_;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    private void setRAxis4(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rAxis4_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    private void setRAxis4(
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
      rAxis4_ = builderForValue.build();
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRAxis4(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (rAxis4_ != null &&
          rAxis4_ != com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.getDefaultInstance()) {
        rAxis4_ =
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.newBuilder(rAxis4_).mergeFrom(value).buildPartial();
      } else {
        rAxis4_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
     */
    private void clearRAxis4() {  rAxis4_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, unPacketNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, ulButtonPressed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, ulButtonTouched_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getRAxis0());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getRAxis1());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getRAxis2());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, getRAxis3());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, getRAxis4());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, unPacketNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, ulButtonPressed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, ulButtonTouched_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRAxis0());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRAxis1());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRAxis2());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRAxis3());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getRAxis4());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

//    public static Builder newBuilder() {
//      return (Builder) DEFAULT_INSTANCE.createBuilder();
//    }
    public static Builder newBuilder(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code VRControllerState_t}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t, Builder> implements
        // @@protoc_insertion_point(builder_implements:VRControllerState_t)
        com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_tOrBuilder {
      // Construct using com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasUnPacketNum() {
        return instance.hasUnPacketNum();
      }
      /**
       * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
       */
      @java.lang.Override
      public int getUnPacketNum() {
        return instance.getUnPacketNum();
      }
      /**
       * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
       */
      public Builder setUnPacketNum(int value) {
        copyOnWrite();
        instance.setUnPacketNum(value);
        return this;
      }
      /**
       * <code>optional uint32 unPacketNum = 1 [default = 0];</code>
       */
      public Builder clearUnPacketNum() {
        copyOnWrite();
        instance.clearUnPacketNum();
        return this;
      }

      /**
       * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasUlButtonPressed() {
        return instance.hasUlButtonPressed();
      }
      /**
       * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
       */
      @java.lang.Override
      public long getUlButtonPressed() {
        return instance.getUlButtonPressed();
      }
      /**
       * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
       */
      public Builder setUlButtonPressed(long value) {
        copyOnWrite();
        instance.setUlButtonPressed(value);
        return this;
      }
      /**
       * <code>optional uint64 ulButtonPressed = 2 [default = 0];</code>
       */
      public Builder clearUlButtonPressed() {
        copyOnWrite();
        instance.clearUlButtonPressed();
        return this;
      }

      /**
       * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasUlButtonTouched() {
        return instance.hasUlButtonTouched();
      }
      /**
       * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
       */
      @java.lang.Override
      public long getUlButtonTouched() {
        return instance.getUlButtonTouched();
      }
      /**
       * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
       */
      public Builder setUlButtonTouched(long value) {
        copyOnWrite();
        instance.setUlButtonTouched(value);
        return this;
      }
      /**
       * <code>optional uint64 ulButtonTouched = 3 [default = 0];</code>
       */
      public Builder clearUlButtonTouched() {
        copyOnWrite();
        instance.clearUlButtonTouched();
        return this;
      }

      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      @java.lang.Override
      public boolean hasRAxis0() {
        return instance.hasRAxis0();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis0() {
        return instance.getRAxis0();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      public Builder setRAxis0(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.setRAxis0(value);
        return this;
        }
      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      public Builder setRAxis0(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
        copyOnWrite();
        instance.setRAxis0(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      public Builder mergeRAxis0(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.mergeRAxis0(value);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis0 = 4;</code>
       */
      public Builder clearRAxis0() {  copyOnWrite();
        instance.clearRAxis0();
        return this;
      }

      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      @java.lang.Override
      public boolean hasRAxis1() {
        return instance.hasRAxis1();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis1() {
        return instance.getRAxis1();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      public Builder setRAxis1(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.setRAxis1(value);
        return this;
        }
      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      public Builder setRAxis1(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
        copyOnWrite();
        instance.setRAxis1(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      public Builder mergeRAxis1(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.mergeRAxis1(value);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis1 = 5;</code>
       */
      public Builder clearRAxis1() {  copyOnWrite();
        instance.clearRAxis1();
        return this;
      }

      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      @java.lang.Override
      public boolean hasRAxis2() {
        return instance.hasRAxis2();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis2() {
        return instance.getRAxis2();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      public Builder setRAxis2(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.setRAxis2(value);
        return this;
        }
      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      public Builder setRAxis2(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
        copyOnWrite();
        instance.setRAxis2(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      public Builder mergeRAxis2(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.mergeRAxis2(value);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis2 = 7;</code>
       */
      public Builder clearRAxis2() {  copyOnWrite();
        instance.clearRAxis2();
        return this;
      }

      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      @java.lang.Override
      public boolean hasRAxis3() {
        return instance.hasRAxis3();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis3() {
        return instance.getRAxis3();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      public Builder setRAxis3(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.setRAxis3(value);
        return this;
        }
      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      public Builder setRAxis3(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
        copyOnWrite();
        instance.setRAxis3(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      public Builder mergeRAxis3(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.mergeRAxis3(value);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis3 = 8;</code>
       */
      public Builder clearRAxis3() {  copyOnWrite();
        instance.clearRAxis3();
        return this;
      }

      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      @java.lang.Override
      public boolean hasRAxis4() {
        return instance.hasRAxis4();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      @java.lang.Override
      public com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t getRAxis4() {
        return instance.getRAxis4();
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      public Builder setRAxis4(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.setRAxis4(value);
        return this;
        }
      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      public Builder setRAxis4(
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder builderForValue) {
        copyOnWrite();
        instance.setRAxis4(builderForValue);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      public Builder mergeRAxis4(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t value) {
        copyOnWrite();
        instance.mergeRAxis4(value);
        return this;
      }
      /**
       * <code>optional .VRControllerAxis_t rAxis4 = 9;</code>
       */
      public Builder clearRAxis4() {  copyOnWrite();
        instance.clearRAxis4();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VRControllerState_t)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t other = (com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t) arg1;
          unPacketNum_ = visitor.visitInt(
              hasUnPacketNum(), unPacketNum_,
              other.hasUnPacketNum(), other.unPacketNum_);
          ulButtonPressed_ = visitor.visitLong(
              hasUlButtonPressed(), ulButtonPressed_,
              other.hasUlButtonPressed(), other.ulButtonPressed_);
          ulButtonTouched_ = visitor.visitLong(
              hasUlButtonTouched(), ulButtonTouched_,
              other.hasUlButtonTouched(), other.ulButtonTouched_);
          rAxis0_ = visitor.visitMessage(rAxis0_, other.rAxis0_);
          rAxis1_ = visitor.visitMessage(rAxis1_, other.rAxis1_);
          rAxis2_ = visitor.visitMessage(rAxis2_, other.rAxis2_);
          rAxis3_ = visitor.visitMessage(rAxis3_, other.rAxis3_);
          rAxis4_ = visitor.visitMessage(rAxis4_, other.rAxis4_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  unPacketNum_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  ulButtonPressed_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  ulButtonTouched_ = input.readUInt64();
                  break;
                }
                case 34: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = rAxis0_.toBuilder();
                  }
                  rAxis0_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rAxis0_);
                    rAxis0_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 42: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = rAxis1_.toBuilder();
                  }
                  rAxis1_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rAxis1_);
                    rAxis1_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 58: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    subBuilder = rAxis2_.toBuilder();
                  }
                  rAxis2_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rAxis2_);
                    rAxis2_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
                case 66: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    subBuilder = rAxis3_.toBuilder();
                  }
                  rAxis3_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rAxis3_);
                    rAxis3_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 74: {
                  com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    subBuilder = rAxis4_.toBuilder();
                  }
                  rAxis4_ = input.readMessage(com.riftcat.vridge.api.client.java.VridgeApi.VRControllerAxis_t.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rAxis4_);
                    rAxis4_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t> parser = PARSER;
          if (parser == null) {
            synchronized (com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:VRControllerState_t)
    private static final com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new VRControllerState_t();
    }

    public static com.riftcat.vridge.api.client.java.VridgeApi.VRControllerState_t getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VRControllerState_t> PARSER;

    public static com.google.protobuf.Parser<VRControllerState_t> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
